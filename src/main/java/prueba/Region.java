package prueba;

// Generated 23-jul-2015 20:36:17 by Hibernate Tools 3.6.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Region generated by hbm2java
 */
@Entity
@Table(name = "region")
public class Region implements java.io.Serializable {

	private int idRegion;
	private Localidad localidad;
	private String pais;
	private String provincia;
	private Integer codigoPostal;
	private Set<DatosAsegurado> datosAsegurados = new HashSet<DatosAsegurado>(0);
	private Set<LugarSinisestro> lugarSinisestros = new HashSet<LugarSinisestro>(
			0);
	private Set<DatosConductor> datosConductors = new HashSet<DatosConductor>(0);
	private Set<Denunciante> denunciantes = new HashSet<Denunciante>(0);
	private Set<ConductorOtro> conductorOtros = new HashSet<ConductorOtro>(0);
	private Set<OtroVehiculo> otroVehiculos = new HashSet<OtroVehiculo>(0);

	public Region() {
	}

	public Region(int idRegion, Localidad localidad) {
		this.idRegion = idRegion;
		this.localidad = localidad;
	}

	public Region(int idRegion, Localidad localidad, String pais,
			String provincia, Integer codigoPostal,
			Set<DatosAsegurado> datosAsegurados,
			Set<LugarSinisestro> lugarSinisestros,
			Set<DatosConductor> datosConductors, Set<Denunciante> denunciantes,
			Set<ConductorOtro> conductorOtros, Set<OtroVehiculo> otroVehiculos) {
		this.idRegion = idRegion;
		this.localidad = localidad;
		this.pais = pais;
		this.provincia = provincia;
		this.codigoPostal = codigoPostal;
		this.datosAsegurados = datosAsegurados;
		this.lugarSinisestros = lugarSinisestros;
		this.datosConductors = datosConductors;
		this.denunciantes = denunciantes;
		this.conductorOtros = conductorOtros;
		this.otroVehiculos = otroVehiculos;
	}

	@Id
	@Column(name = "idRegion", unique = true, nullable = false)
	public int getIdRegion() {
		return this.idRegion;
	}

	public void setIdRegion(int idRegion) {
		this.idRegion = idRegion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Localidad_idLocalidad", nullable = false)
	public Localidad getLocalidad() {
		return this.localidad;
	}

	public void setLocalidad(Localidad localidad) {
		this.localidad = localidad;
	}

	@Column(name = "pais", length = 45)
	public String getPais() {
		return this.pais;
	}

	public void setPais(String pais) {
		this.pais = pais;
	}

	@Column(name = "provincia", length = 45)
	public String getProvincia() {
		return this.provincia;
	}

	public void setProvincia(String provincia) {
		this.provincia = provincia;
	}

	@Column(name = "codigo_postal")
	public Integer getCodigoPostal() {
		return this.codigoPostal;
	}

	public void setCodigoPostal(Integer codigoPostal) {
		this.codigoPostal = codigoPostal;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "region")
	public Set<DatosAsegurado> getDatosAsegurados() {
		return this.datosAsegurados;
	}

	public void setDatosAsegurados(Set<DatosAsegurado> datosAsegurados) {
		this.datosAsegurados = datosAsegurados;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "region")
	public Set<LugarSinisestro> getLugarSinisestros() {
		return this.lugarSinisestros;
	}

	public void setLugarSinisestros(Set<LugarSinisestro> lugarSinisestros) {
		this.lugarSinisestros = lugarSinisestros;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "region")
	public Set<DatosConductor> getDatosConductors() {
		return this.datosConductors;
	}

	public void setDatosConductors(Set<DatosConductor> datosConductors) {
		this.datosConductors = datosConductors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "region")
	public Set<Denunciante> getDenunciantes() {
		return this.denunciantes;
	}

	public void setDenunciantes(Set<Denunciante> denunciantes) {
		this.denunciantes = denunciantes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "region")
	public Set<ConductorOtro> getConductorOtros() {
		return this.conductorOtros;
	}

	public void setConductorOtros(Set<ConductorOtro> conductorOtros) {
		this.conductorOtros = conductorOtros;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "region")
	public Set<OtroVehiculo> getOtroVehiculos() {
		return this.otroVehiculos;
	}

	public void setOtroVehiculos(Set<OtroVehiculo> otroVehiculos) {
		this.otroVehiculos = otroVehiculos;
	}

}
